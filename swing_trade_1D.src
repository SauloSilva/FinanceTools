function isBearish(clopen:float; clclose:float) :Boolean;
  BEGIN
    Result:= clopen > clclose;
  END;

function isBullish(clopen:float; clclose:float) :Boolean;
  BEGIN
    Result:= clopen < clclose;
  END;

function isEngulfed:Boolean;
  BEGIN
    Result:= (ABS(Maxima - Minima) > ABS(Maxima[1] - Minima[1])) e
             (Fechamento > Abertura[1]) e
             (Abertura < Fechamento[1]);
  END;

function isHammerLike:Boolean;
  BEGIN
    IF ((Abertura < Fechamento)) THEN
      Result:= ((ABS(Fechamento - Maxima) < (ABS(Abertura - Fechamento))) e (ABS(Abertura - Minima) > (ABS(Abertura - Fechamento) * 2)))
    ELSE IF ((Abertura > Fechamento) e (Fechamento = Minima)) THEN
      Result:= ((ABS(Fechamento - Minima) < (ABS(Abertura - Fechamento))) e (ABS(Abertura - Maxima) > (ABS(Abertura - Fechamento) * 2)))
    ELSE
      Result := false;
  END;

BEGIN     
  IF (isBullish(Abertura, Fechamento)) THEN
              PaintBar(clBlue)
  ELSE IF (isBearish(Abertura, Fechamento)) THEN
              PaintBar(clRed);

  IF (C_Doji(14) = 1) then
              PaintBar(clYellow);

  IF (isHammerLike) then
              PaintBar(clFuchsia);
                
  IF ((isBearish(Abertura[1], Fechamento[1])) e
           (isBullish(Abertura, Fechamento)) e
           (isEngulfed)) then
              PaintBar(clWhite);  

END;
